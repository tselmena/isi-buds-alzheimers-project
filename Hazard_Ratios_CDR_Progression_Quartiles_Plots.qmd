---
title: "Hazard Ratios for CDR Progression"
format: html
editor: visual
---
## Setup and Libraries
```{r setup}
#| message: false
#| warning: false

library(tidyverse)
library(survival)
library(survminer)
library(ggplot2)
library(dplyr)
```

## Read Data & Manipulation

```{r data-read}
#| message: false
setwd('C:/Users/emili/OneDrive - University of Georgia/ISI-BUDS/project-week1/A4SecondaryAnalysis/A4SecondaryAnalysis/A4_ClinicalData/Derived Data')
# Participant characteristics data:
SUBJINFO_raw <- read_csv("SUBJINFO.csv")

# Longitudinal PACC data from Analysis Data Questionnaire Scores (ADQS):
ADQS_raw <- read_csv("ADQS.csv")

SPINFO_raw <- read_csv("C:/Users/emili/OneDrive - University of Georgia/ISI-BUDS/project-week1/A4SecondaryAnalysis/A4SecondaryAnalysis/A4_ClinicalData/Raw Data/spinfo.csv")

CDR_raw <- read_csv("C:/Users/emili/OneDrive - University of Georgia/ISI-BUDS/project-week1/A4SecondaryAnalysis/A4SecondaryAnalysis/A4_ClinicalData/Raw Data/cdr.csv")
```

```{r data-manipulation}
#| include: false

# Outcomes collected at Visit 1
V1OUTCOME <- ADQS_raw |>
  filter(VISITCD == "001") %>%
  select(BID, QSTESTCD, QSSTRESN) %>%
  pivot_wider(values_from = QSSTRESN, names_from = QSTESTCD)

# Outcomes collected at Visit 6
V6OUTCOME <- ADQS_raw %>%
  filter(VISITCD == "006") %>%
  select(BID, QSTESTCD, QSSTRESN) %>%
  pivot_wider(values_from = QSSTRESN, names_from = QSTESTCD)

SUBJINFO <- SUBJINFO_raw %>%
  left_join(V6OUTCOME, by = "BID") %>%
  left_join(V1OUTCOME %>%
      select(BID, CDRSB, CFITOTAL, CFISP, CFIPT, ADLPQPT, ADLPQSP, ADLTOTAL), 
    by = "BID") %>%
  mutate(
    AGECAT = case_when(AGEYR < 65 ~ "Age < 65",
      AGEYR >= 65 & AGEYR < 75 ~ "65 <= Age < 75",
      AGEYR >= 75 & AGEYR < 85 ~ "75 <= Age < 85",
      AGEYR >= 85 ~ "Age >= 85"),
    SEX = factor(case_when(
      SEX == 1 ~ "Female",
      SEX == 2 ~ "Male"), levels = c("Male", "Female")),
    RACE = case_when(RACE == 1 ~ "White",
      RACE == 2 ~ "Black or African American",
      RACE == 58 ~ "Asian",
      RACE == 79 ~ "Native Hawaiian or Other Pacific Islander",
      RACE == 84 ~ "American Indian or Alaskan Native",
      RACE == 97 ~ "Unknown or Not Reported",
      RACE == 100 ~ "More than one race"),
    MARITAL = case_when(MARITAL == 2 ~ "Divorced",
      MARITAL == 4 ~ "Never married",
      MARITAL == 5 ~ "Widowed",
      MARITAL == 11 ~ "Married",
      MARITAL == 97 ~ "Unknown or Not Reported"),
    ETHNIC = case_when(ETHNIC == 50 ~ "Hispanic or Latino",
      ETHNIC == 56 ~ "Not Hispanic or Latino",
      ETHNIC == 97 ~ "Unknown or Not reported"),
    ALCHLBL = case_when(ALCHLBL == 0 ~ "No",
      ALCHLBL == 1 ~ "Yes"),
    CFBL = case_when(CFBL == 0 ~ "No",
      CFBL == 1 ~ "Yes"),
    TBBL = case_when(TBBL == 0 ~ "No",
      TBBL == 1 ~ "Yes"),
    WRKRET = case_when(WRKRET == 1 ~ "Yes",
      WRKRET == 0 ~ "No",
      WRKRET == 96 ~ "Not Applicable"),
    APOEGNPRSNFLG = case_when(APOEGNPRSNFLG == 1 ~ "Yes",
      APOEGNPRSNFLG == 0 ~ "No"),
    AGEYR = as.numeric(AGEYR),
    SUVRCER = as.numeric(SUVRCER),
    AMYLCENT = as.numeric(AMYLCENT),
    EDCCNTU = as.numeric(EDCCNTU),
    COGDSSTTSV6 = as.numeric(COGDSSTTSV6),
    COGLMDRTSV6 = as.numeric(COGLMDRTSV6),
    TX = factor(TX, levels = c("Placebo", "Solanezumab")),
    COMPLETER_label = case_when(
      SUBJCOMPTR == 1 ~ "Completer",
      TRUE ~ "Dropout"))

# Filter for placebo group
SUBJINFO_PLAC <- SUBJINFO %>% 
  filter(TX %in% "Placebo")
```


```{r}
create_individual_test_plots <- function(data, tests) {
  plot_list <- list()
  
  for (test_name in tests) {
    test_data <- data %>% filter(Test == test_name)
    
    if (nrow(test_data) == 0) next
    
    p <- ggplot(test_data, aes(x = Time, y = estimate, color = Quartile_Comparison)) +
      geom_line(size = 1.5, alpha = 0.9) +
      geom_point(size = 3, alpha = 0.9) +
      geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = Quartile_Comparison), alpha = 0.25, color = NA) +
      geom_hline(yintercept = 1, linetype = "dashed", color = "grey40", size = 1) +
      scale_x_continuous(breaks = time_points, labels = paste0(time_points, "w")) +
      scale_y_log10() +
      scale_color_manual(values = c("#E31A1C", "#15bc32", "#1F78B4")) +
      scale_fill_manual(values = c("#E31A1C", "#15bc32", "#1F78B4"))+
      labs(
        title = paste("Hazard Ratios for CDR Progression:", test_name),
        subtitle = "Reference group: Q1 (Best quartile)",
        x = "Time Point",
        y = "Hazard Ratio (log scale)",
        color = "Comparison",
        fill = "Comparison"
      ) +
      theme_bw(base_size = 12) +
      theme(
        plot.title = element_text(size = 14, hjust = 0.5, face = "bold"),
        plot.subtitle = element_text(size = 11, hjust = 0.5),
        legend.position = "bottom",
        legend.title = element_text(face = "bold"),
        panel.grid.minor = element_blank()
      )
    
    plot_list[[test_name]] <- p
    
    # Save individual plot
    ggsave(paste0("HR_", test_name, "_over_time.png"), p, 
           width = 8, height = 6, dpi = 300)
  }
  
  return(plot_list)
}

individual_plots <- create_individual_test_plots(hr_line_data, test_vars)
```

```{r}
# Transform data
hr_line_data <- hr_table %>%
  filter(!is.na(Test), !is.na(Time), !is.na(Comparison)) %>%
  mutate(
    Comparison = gsub("Q", "", as.character(Comparison)),
    Quartile_Comparison = factor(paste0("Q", Comparison, " vs Q1"),
                                 levels = c("Q2 vs Q1", "Q3 vs Q1", "Q4 vs Q1"))
  ) %>%
  filter(Comparison %in% c("2", "3", "4")) %>%
  arrange(Test, Time, Comparison)

# Generate and save plot
if (nrow(hr_line_data) > 0 && length(unique(hr_line_data$Test)) > 0) {

  hazard_line_plot <- ggplot(hr_line_data, aes(x = Time, y = estimate, color = Quartile_Comparison, group = Quartile_Comparison)) +
    geom_line(size = 1.2, alpha = 0.8) +
    geom_point(size = 2.5, alpha = 0.9) +
    geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = Quartile_Comparison), 
                alpha = 0.2, color = NA) +
    geom_hline(yintercept = 1, linetype = "dashed", color = "grey40", size = 0.8) +
    facet_wrap(~ Test, scales = "free_y", ncol = 3) +
    scale_x_continuous(breaks = time_points, labels = paste0(time_points, "w")) +
    scale_y_log10(breaks = c(0.25, 0.5, 1, 2, 4, 8, 16), labels = c(0.25, 0.5, 1, 2, 4, 8, 16)) +
    scale_color_manual(values = c("Q2 vs Q1" = "#E31A1C", "Q3 vs Q1" = "#15bc32", "Q4 vs Q1" = "#1F78B4")) +
    scale_fill_manual(values = c("Q2 vs Q1" = "#E31A1C", "Q3 vs Q1" = "#15bc32", "Q4 vs Q1" = "#1F78B4")) +
    labs(
      title = "Hazard Ratios for CDR Progression Over Time by Test Quartiles",
      subtitle = "Reference group: Q1 (Best quartile)",
      x = "Time Point",
      y = "Hazard Ratio (log scale)",
      color = "Comparison",
      fill = "Comparison"
    ) +
    theme_bw(base_size = 11) +
    theme(
      plot.title = element_text(size = 14, hjust = 0.5, face = "bold"),
      plot.subtitle = element_text(size = 12, hjust = 0.5),
      strip.background = element_rect(fill = "grey90", color = "black"),
      strip.text = element_text(face = "bold", size = 10),
      legend.position = c(0.85, 0.10),  # Bottom right corner (adjust as needed)
      legend.background = element_rect(fill = alpha("white", 0.8), color = "grey60"),
      legend.title = element_text(face = "bold", size = 12),
      legend.text = element_text(size = 11),
      legend.key.size = unit(2, "lines"),
      panel.grid.minor = element_blank(),
      axis.text.x = element_text(angle = 45, hjust = 1)
    )

  ggsave("hazard_ratios_by_test_time.png", hazard_line_plot, width = 15, height = 12, dpi = 300)
}
```
