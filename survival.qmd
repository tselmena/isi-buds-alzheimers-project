---
title: "K-M for CFI"
format: html
editor: visual
---

# CDR Progression Survival Analysis by CFI Quartiles

## Goals:

-   Plot time to progression of CDR for CFI PT/SP/TOTAL quartiles
-   Compare survival curves across quartiles for each CFI measure

```{r load-libraries-and-read-data, message=FALSE, warning=FALSE}
library(tidyverse)
library(survival)
library(survminer)
library(ggplot2)
library(gridExtra)
library(glue)
library(kableExtra)
library(broom)
library(patchwork)

base_path <- "/Users/christopherturner/Documents/ISI-BUDS/Research_Gillen/A4SecondaryAnalysis/A4_ClinicalData/Raw Data/"
derived_path <- "/Users/christopherturner/Documents/ISI-BUDS/Research_Gillen/A4SecondaryAnalysis/A4_ClinicalData/Derived Data/"

CDR_raw <- read_csv(file.path(base_path, "cdr.csv"))
ADQS_raw <- read_csv(file.path(derived_path, "ADQS.csv"))
SUBJINFO_raw <- read_csv(file.path(derived_path, "SUBJINFO.csv"))
```

```{r prepare-outcomes}
test_vars <- c("MMSE", "ADLTOTAL", "LMIIa", "PACC", "DIGIT",
               "CFITOTAL", "CFISP", "CFIPT", "ADLPQPT", "ADLPQSP")

V1OUTCOME <- ADQS_raw |>
  filter(VISITCD == "001") |>
  select(BID, QSTESTCD, QSSTRESN) |>
  pivot_wider(names_from = QSTESTCD, values_from = QSSTRESN)

V6OUTCOME <- ADQS_raw |>
  filter(VISITCD == "006") |>
  select(BID, QSTESTCD, QSSTRESN) |>
  pivot_wider(names_from = QSTESTCD, values_from = QSSTRESN)
```

```{r prepare-subject-info}
SUBJINFO <- SUBJINFO_raw |>
  left_join(V1OUTCOME |> select(BID, all_of(test_vars), CDRSB), by = "BID") |>
  left_join(V6OUTCOME, by = "BID") |>
  mutate(
    AGECAT = case_when(
      AGEYR < 65 ~ "Age < 65",
      AGEYR >= 65 & AGEYR < 75 ~ "65 <= Age < 75",
      AGEYR >= 75 & AGEYR < 85 ~ "75 <= Age < 85",
      AGEYR >= 85 ~ "Age >= 85"
    ),
    SEX = factor(case_when(SEX == 1 ~ "Female", SEX == 2 ~ "Male"), levels = c("Male", "Female")),
    TX = factor(TX, levels = c("Placebo", "Solanezumab")),
    COMPLETER_label = if_else(SUBJCOMPTR == 1, "Completer", "Dropout")
  )

SUBJINFO_PLAC <- SUBJINFO |> filter(TX == "Placebo")
```

```{r prepare-cdr-conversion}
CDR_ind <- CDR_raw |>
  filter(BID %in% SUBJINFO_PLAC$BID, CDADTC_DAYS_T0 >= 0) |>
  mutate(WEEK = CDADTC_DAYS_T0 / 7) |>
  filter(WEEK <= 250) |>
  select(BID, CDGLOBAL, WEEK)

conversion_times <- CDR_ind |>
  filter(CDGLOBAL > 0) |>
  group_by(BID) |>
  summarise(CDRCONV_WEEK = min(WEEK), .groups = "drop")
```

```{r create-survival-data}
survival_data <- SUBJINFO_PLAC |>
  select(BID) |>
  left_join(V1OUTCOME |> select(BID, all_of(test_vars)), by = "BID") |>
  left_join(conversion_times, by = "BID") |>
  mutate(event = if_else(is.na(CDRCONV_WEEK), 0L, 1L),
         time_to_event = if_else(is.na(CDRCONV_WEEK), 240, CDRCONV_WEEK))
```

```{r reshape-and-assign-quartiles}
survival_long <- survival_data |>
  pivot_longer(
    cols = all_of(test_vars),
    names_to = "Test",
    values_to = "Score"
  ) |>
  filter(!is.na(Score)) |>
  group_by(Test) |>
  mutate(score_group = ntile(Score, 4) |> factor(levels = 1:4, labels = c("Q1", "Q2", "Q3", "Q4"))) |>
  ungroup()


facet_labels <- c(
  MMSE = "Mini Mental State Exam",
  ADLTOTAL = "ADL Participant and Partner",
  LMIIa = "Logical Memory Paragraph Recall",
  PACC = "Preclinical Alzheimer Cognitive Composite",
  DIGIT = "Digit Symbol Substitution Test",
  CFITOTAL = "CFI Participant and Partner",
  CFISP = "CFI Partner",
  CFIPT = "CFI Participant",
  ADLPQPT = "ADL Participant",
  ADLPQSP = "ADL Partner"
)

survival_long$Test <- recode(survival_long$Test, !!!facet_labels)

cfi_tests <- c("CFI Participant and Partner", "CFI Partner", "CFI Participant")
```

```{r survival-analysis-and-plots}
cox_results_list <- list()
plot_data_list <- list()
logrank_results_list <- list()

for (test_name in unique(survival_long$Test)) {
  temp_data <- survival_long |> filter(Test == test_name)

  cox_model <- coxph(Surv(time_to_event, event) ~ score_group, data = temp_data)
  cox_tidy <- broom::tidy(cox_model, exponentiate = TRUE, conf.int = TRUE) |>
    filter(term != "(Intercept)") |>
    mutate(
      Test = test_name,
      Quartile = str_replace(term, "score_group", "")
    ) |>
    select(Test, Quartile, HR = estimate, LowerCI = conf.low, UpperCI = conf.high, p_value = p.value)
  cox_results_list[[test_name]] <- cox_tidy

  logrank_test <- survdiff(Surv(time_to_event, event) ~ score_group, data = temp_data)
  logrank_results_list[[test_name]] <- logrank_test

  surv_obj <- survfit(Surv(time_to_event, event) ~ score_group, data = temp_data)
  surv_df <- broom::tidy(surv_obj) |>
    mutate(Test = test_name) |>
    mutate(strata_group = str_extract(strata, "Q\\d"))
  plot_data_list[[test_name]] <- surv_df
}

all_surv_plot_df <- bind_rows(plot_data_list) |>
  mutate(Test = factor(Test, levels = unique(survival_long$Test)))

base_quartile_colors <- c(
  "Q1" = "#F21B3F",
  "Q2" = "#5762D5",
  "Q3" = "#d6ca98",
  "Q4" = "#4A5043"
)

cfi_colors_swapped <- c(
  "Q1" = "#4A5043",
  "Q2" = "#5762D5",
  "Q3" = "#d6ca98",
  "Q4" = "#F21B3F"
)

non_cfi_plot_df <- all_surv_plot_df |>
  filter(!Test %in% cfi_tests)

km_non_cfi_plot <- ggplot(non_cfi_plot_df, aes(x = time, y = estimate, color = strata_group, group = interaction(Test, strata_group))) +
  geom_step(size = 0.8) +
  geom_hline(yintercept = 0.5, linetype = "dashed", color = "grey40") +
  facet_wrap(~Test, scales = "free_y", ncol = 2) +
  coord_cartesian(ylim = c(0.3, 1)) +
  scale_color_manual(values = base_quartile_colors, name = "Quartile") +
  labs(x = "Time (weeks)", y = "Survival Probability",
       title = "Kaplan-Meier Curves by Quartile by Cognitive Test (Excluding CFI)") +
  theme_minimal(base_size = 18) +
  theme(
    plot.title = element_text(size = 22, face = "bold"),
    axis.title = element_text(size = 16, face = "bold"),
    axis.text = element_text(size = 16, face = "bold"),
    strip.text = element_text(size = 16, face = "bold"),
    legend.title = element_text(size = 16, face = "bold"),
    legend.text = element_text(size = 16),
    legend.position = "top"
  )

ggsave("km_non_cfi_faceted_plot.png", km_non_cfi_plot, width = 18, height = 18, dpi = 300)
print(km_non_cfi_plot)

cfi_plot_df <- all_surv_plot_df |>
  filter(Test %in% cfi_tests)

km_cfi_faceted_plot <- ggplot(cfi_plot_df, aes(x = time, y = estimate, color = strata_group, group = interaction(Test, strata_group))) +
  geom_step(size = 0.8) +
  geom_hline(yintercept = 0.5, linetype = "dashed", color = "grey40") +
  facet_wrap(~Test, scales = "free_y", ncol = 1) +
  coord_cartesian(ylim = c(0.3, 1)) +
  scale_color_manual(values = cfi_colors_swapped, name = "Quartile") +
  labs(x = "Time (weeks)", y = "Survival Probability",
       title = "Kaplan-Meier Curves by Quartile for CFI Tests",
       caption = "Note: Increasing CFI scores indicate decreasing cognitive function.") +
  theme_minimal(base_size = 18) +
  theme(
    plot.title = element_text(size = 26, face = "bold"),
    axis.title = element_text(size = 16, face = "bold"),
    axis.text = element_text(size = 16, face = "bold"),
    strip.text = element_text(size = 16, face = "bold"),
    legend.title = element_text(size = 16, face = "bold"),
    legend.text = element_text(size = 16),
    legend.position = "top",
    plot.caption = element_text(size = 14, hjust = 0.5, face = "italic", margin = margin(t = 10))
  )

ggsave("km_cfi_faceted_plot.png", km_cfi_faceted_plot, width = 10, height = 12, dpi = 300)
print(km_cfi_faceted_plot)
```

```{r hazard-ratios-table}
cox_summary_table <- bind_rows(cox_results_list) |>
  filter(Quartile != "Q1") |>
  mutate(
    HR = round(HR, 2),
    CI = if_else(is.na(LowerCI), "", glue::glue("{round(LowerCI, 2)}â€“{round(UpperCI, 2)}")),
    p_value = if_else(is.na(p_value), "", as.character(signif(p_value, 3)))
  ) |>
  select(Test, Quartile, HR, CI, p_value)

background_colors_table <- case_when(
  cox_summary_table$Test %in% cfi_tests & cox_summary_table$Quartile == "Q2" ~ cfi_colors_swapped["Q2"],
  cox_summary_table$Test %in% cfi_tests & cox_summary_table$Quartile == "Q3" ~ cfi_colors_swapped["Q3"],
  cox_summary_table$Test %in% cfi_tests & cox_summary_table$Quartile == "Q4" ~ cfi_colors_swapped["Q4"],
  cox_summary_table$Quartile == "Q2" ~ base_quartile_colors["Q2"],
  cox_summary_table$Quartile == "Q3" ~ base_quartile_colors["Q3"],
  cox_summary_table$Quartile == "Q4" ~ base_quartile_colors["Q4"],
  TRUE ~ ""
)

kbl_out <- kbl(cox_summary_table, caption = "Hazard Ratios for CDR Progression by Quartile (Q1 as Reference)") |>
  kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed")) |>
  column_spec(2, bold = TRUE, background = background_colors_table)

print(kbl_out)

png("cox_summary_table.png", width = 1000, height = 1500, res = 150)
grid::grid.draw(gridExtra::tableGrob(cox_summary_table, rows = NULL))
dev.off()
```

```{r summary-statistics}
summary_table_quartiles <- survival_long |>
  group_by(Test, score_group) |>
  summarise(
    N = n(),
    Events = sum(event),
    `Event Rate (%)` = round(100 * sum(event) / n(), 1),
    `Median Time to Event` = ifelse(sum(event) > 0,
                                    median(time_to_event[event == 1]),
                                    NA),
    .groups = "drop"
  )
print(summary_table_quartiles)
```

```{r logrank-tests}
cat("\n--- Log-rank Test Results for Differences Between Quartiles ---\n\n")
for (test_name in names(logrank_results_list)) {
  cat(glue("{test_name} Quartiles:\n"))
  print(logrank_results_list[[test_name]])
  cat("\n")
}
```

```{r}
cat("Total subjects in survival_data:", length(unique(survival_data$BID)), "\n")

survival_long_all <- survival_data |>
  pivot_longer(
    cols = all_of(test_vars),
    names_to = "Test",
    values_to = "Score"
  )

cat("Total rows in long data (before filtering NA Scores):", nrow(survival_long_all), "\n")
cat("Total unique subjects in long data:", length(unique(survival_long_all$BID)), "\n")

survival_long_filtered <- survival_long_all |>
  filter(!is.na(Score))

cat("Total rows after filtering NA Scores:", nrow(survival_long_filtered), "\n")
cat("Total unique subjects after filtering NA Scores:", length(unique(survival_long_filtered$BID)), "\n")
```
